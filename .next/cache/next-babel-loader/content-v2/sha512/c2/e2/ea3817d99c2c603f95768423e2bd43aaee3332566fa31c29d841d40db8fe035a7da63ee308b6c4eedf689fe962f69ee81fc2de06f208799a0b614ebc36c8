{"ast":null,"code":"import _defineProperty from \"/Users/anshsharma/Desktop/Ansh-Sharma-120601_portfolio/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/anshsharma/Desktop/Ansh-Sharma-120601_portfolio/pages/_app.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ChakraProvider } from '@chakra-ui/react';\nimport { useState, useEffect } from 'react';\nimport Navbar from '../components/Navbar';\nimport Footer from '../components/Footer';\nimport { ClipLoader } from 'react-spinners';\n\nfunction MyApp(_ref) {\n  _s();\n\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  useEffect(function () {\n    setLoading(true);\n    setTimeout(function () {\n      setLoading(false);\n    }, 5000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(CircleLoader, {\n      color: '#F37A24',\n      loading: loading,\n      css: 'override',\n      size: 30\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ChakraProvider, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyApp, \"bp7W7BLZaxNmS0ceaCBH82+KoGQ=\");\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/Users/anshsharma/Desktop/Ansh-Sharma-120601_portfolio/pages/_app.js"],"names":["ChakraProvider","useState","useEffect","Navbar","Footer","ClipLoader","MyApp","Component","pageProps","loading","setLoading","setTimeout"],"mappings":";;;;;;;;;;AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,UAAT,QAA2B,gBAA3B;;AAEA,SAASC,KAAT,OAAyC;AAAA;;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;;AAAA,kBACTP,QAAQ,CAAC,KAAD,CADC;AAAA,MAChCQ,OADgC;AAAA,MACvBC,UADuB;;AAEvCR,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAC,IAAAA,UAAU,CAAC,YAAM;AACfD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GALQ,EAKN,EALM,CAAT;AAMA,sBACE;AAAA,cACGD,OAAO,gBACN,QAAC,YAAD;AAAc,MAAA,KAAK,EAAE,SAArB;AAAgC,MAAA,OAAO,EAAEA,OAAzC;AAAkD,MAAA,GAAG,EAAE,UAAvD;AAAmE,MAAA,IAAI,EAAE;AAAzE;AAAA;AAAA;AAAA;AAAA,YADM,gBAGN,QAAC,cAAD;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,SAAD,oBAAeD,SAAf;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GArBQF,K;;KAAAA,K;AAuBT,eAAeA,KAAf","sourcesContent":["import { ChakraProvider } from '@chakra-ui/react';\nimport { useState, useEffect } from 'react';\nimport Navbar from '../components/Navbar';\nimport Footer from '../components/Footer';\nimport { ClipLoader } from 'react-spinners';\n\nfunction MyApp({ Component, pageProps }) {\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 5000);\n  }, []);\n  return (\n    <div>\n      {loading ? (\n        <CircleLoader color={'#F37A24'} loading={loading} css={'override'} size={30} />\n      ) : (\n        <ChakraProvider>\n          <Navbar />\n          <Footer />\n          <Component {...pageProps} />\n        </ChakraProvider>\n      )}\n    </div>\n  );\n}\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}