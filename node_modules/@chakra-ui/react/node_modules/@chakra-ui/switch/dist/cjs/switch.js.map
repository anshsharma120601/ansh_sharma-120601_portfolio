{"version":3,"sources":["../../src/switch.tsx"],"names":["Switch","props","ref","styles","spacing","children","ownProps","state","getInputProps","getCheckboxProps","getRootProps","getLabelProps","containerStyles","React","useMemo","display","position","verticalAlign","lineHeight","container","trackStyles","flexShrink","justifyContent","boxSizing","cursor","track","labelStyles","userSelect","marginStart","label","className","thumb","isChecked","isHovered","__DEV__","displayName"],"mappings":";;;;;AAAA;;AACA;;AAUA;;AACA;;;;;;;;;;AAcO,IAAMA,MAAM,gBAAG,wBAAiC,UAACC,KAAD,EAAQC,GAAR,EAAgB;AACrE,MAAMC,MAAM,GAAG,iCAAoB,QAApB,EAA8BF,KAA9B,CAAf;;AADqE,0BAGf,8BAAiBA,KAAjB,CAHe;AAAA,gDAG7DG,OAH6D;AAAA,MAG7DA,OAH6D,sCAGnD,QAHmD;AAAA,MAGzCC,QAHyC,qBAGzCA,QAHyC;AAAA,MAG5BC,QAH4B;;AAAA,qBAWjE,2BAAYA,QAAZ,CAXiE;AAAA,MAMnEC,KANmE,gBAMnEA,KANmE;AAAA,MAOnEC,aAPmE,gBAOnEA,aAPmE;AAAA,MAQnEC,gBARmE,gBAQnEA,gBARmE;AAAA,MASnEC,YATmE,gBASnEA,YATmE;AAAA,MAUnEC,aAVmE,gBAUnEA,aAVmE;;AAarE,MAAMC,eAAkC,GAAGC,KAAK,CAACC,OAAN,CACzC;AAAA;AACEC,MAAAA,OAAO,EAAE,cADX;AAEEC,MAAAA,QAAQ,EAAE,UAFZ;AAGEC,MAAAA,aAAa,EAAE,QAHjB;AAIEC,MAAAA,UAAU,EAAE;AAJd,OAKKf,MAAM,CAACgB,SALZ;AAAA,GADyC,EAQzC,CAAChB,MAAM,CAACgB,SAAR,CARyC,CAA3C;AAWA,MAAMC,WAA8B,GAAGP,KAAK,CAACC,OAAN,CACrC;AAAA;AACEC,MAAAA,OAAO,EAAE,aADX;AAEEM,MAAAA,UAAU,EAAE,CAFd;AAGEC,MAAAA,cAAc,EAAE,YAHlB;AAIEC,MAAAA,SAAS,EAAE,aAJb;AAKEC,MAAAA,MAAM,EAAE;AALV,OAMKrB,MAAM,CAACsB,KANZ;AAAA,GADqC,EASrC,CAACtB,MAAM,CAACsB,KAAR,CATqC,CAAvC;AAYA,MAAMC,WAA8B,GAAGb,KAAK,CAACC,OAAN,CACrC;AAAA;AACEa,MAAAA,UAAU,EAAE,MADd;AAEEC,MAAAA,WAAW,EAAExB;AAFf,OAGKD,MAAM,CAAC0B,KAHZ;AAAA,GADqC,EAMrC,CAACzB,OAAD,EAAUD,MAAM,CAAC0B,KAAjB,CANqC,CAAvC;AASA,sBACE,oBAAC,cAAD,CAAQ,KAAR,eACMnB,YAAY,EADlB;AAEE,IAAA,SAAS,EAAE,eAAG,eAAH,EAAoBT,KAAK,CAAC6B,SAA1B,CAFb;AAGE,IAAA,KAAK,EAAElB;AAHT,mBAKE;AAAO,IAAA,SAAS,EAAC;AAAjB,KAA4CJ,aAAa,CAAC,EAAD,EAAKN,GAAL,CAAzD,EALF,eAME,oBAAC,cAAD,CAAQ,IAAR,eACMO,gBAAgB,EADtB;AAEE,IAAA,SAAS,EAAC,sBAFZ;AAGE,IAAA,KAAK,EAAEW;AAHT,mBAKE,oBAAC,cAAD,CAAQ,IAAR;AACE,IAAA,KAAK,EAAEjB,MAAM,CAAC4B,KADhB;AAEE,IAAA,SAAS,EAAC,sBAFZ;AAGE,oBAAc,qBAASxB,KAAK,CAACyB,SAAf,CAHhB;AAIE,kBAAY,qBAASzB,KAAK,CAAC0B,SAAf;AAJd,IALF,CANF,EAkBG5B,QAAQ,iBACP,oBAAC,cAAD,CAAQ,IAAR;AACE,IAAA,SAAS,EAAC;AADZ,KAEMM,aAAa,EAFnB;AAGE,IAAA,KAAK,EAAEe;AAHT,MAKGrB,QALH,CAnBJ,CADF;AA8BD,CA3EqB,CAAf;;;AA6EP,IAAI6B,cAAJ,EAAa;AACXlC,EAAAA,MAAM,CAACmC,WAAP,GAAqB,QAArB;AACD","sourcesContent":["import { useCheckbox, UseCheckboxProps } from \"@chakra-ui/checkbox\"\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  HTMLChakraProps,\n  SystemProps,\n} from \"@chakra-ui/system\"\nimport { cx, dataAttr, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport interface SwitchProps\n  extends Omit<UseCheckboxProps, \"isIndeterminate\">,\n    Omit<HTMLChakraProps<\"label\">, keyof UseCheckboxProps>,\n    ThemingProps<\"Switch\"> {\n  /**\n   * The spacing between the switch and its label text\n   * @default 0.5rem\n   * @type SystemProps[\"marginLeft\"]\n   */\n  spacing?: SystemProps[\"marginLeft\"]\n}\n\nexport const Switch = forwardRef<SwitchProps, \"input\">((props, ref) => {\n  const styles = useMultiStyleConfig(\"Switch\", props)\n\n  const { spacing = \"0.5rem\", children, ...ownProps } = omitThemingProps(props)\n\n  const {\n    state,\n    getInputProps,\n    getCheckboxProps,\n    getRootProps,\n    getLabelProps,\n  } = useCheckbox(ownProps)\n\n  const containerStyles: SystemStyleObject = React.useMemo(\n    () => ({\n      display: \"inline-block\",\n      position: \"relative\",\n      verticalAlign: \"middle\",\n      lineHeight: \"normal\",\n      ...styles.container,\n    }),\n    [styles.container],\n  )\n\n  const trackStyles: SystemStyleObject = React.useMemo(\n    () => ({\n      display: \"inline-flex\",\n      flexShrink: 0,\n      justifyContent: \"flex-start\",\n      boxSizing: \"content-box\",\n      cursor: \"pointer\",\n      ...styles.track,\n    }),\n    [styles.track],\n  )\n\n  const labelStyles: SystemStyleObject = React.useMemo(\n    () => ({\n      userSelect: \"none\",\n      marginStart: spacing,\n      ...styles.label,\n    }),\n    [spacing, styles.label],\n  )\n\n  return (\n    <chakra.label\n      {...getRootProps()}\n      className={cx(\"chakra-switch\", props.className)}\n      __css={containerStyles}\n    >\n      <input className=\"chakra-switch__input\" {...getInputProps({}, ref)} />\n      <chakra.span\n        {...getCheckboxProps()}\n        className=\"chakra-switch__track\"\n        __css={trackStyles}\n      >\n        <chakra.span\n          __css={styles.thumb}\n          className=\"chakra-switch__thumb\"\n          data-checked={dataAttr(state.isChecked)}\n          data-hover={dataAttr(state.isHovered)}\n        />\n      </chakra.span>\n      {children && (\n        <chakra.span\n          className=\"chakra-switch__label\"\n          {...getLabelProps()}\n          __css={labelStyles}\n        >\n          {children}\n        </chakra.span>\n      )}\n    </chakra.label>\n  )\n})\n\nif (__DEV__) {\n  Switch.displayName = \"Switch\"\n}\n"],"file":"switch.js"}