{"version":3,"sources":["../../src/use-menu.ts"],"names":["useClickable","createDescendantContext","useControllableState","useDisclosure","useFocusOnHide","useId","useIds","useOutsideClick","useShortcut","useUnmountEffect","useUpdateEffect","usePopper","createContext","getValidChildren","mergeRefs","addItem","callAllHandlers","dataAttr","determineLazyBehavior","focus","getNextItemFromSearch","getOwnerDocument","isActiveElement","isArray","isHTMLElement","isString","normalizeEventKey","removeItem","React","MenuDescendantsProvider","useMenuDescendantsContext","useMenuDescendants","useMenuDescendant","MenuProvider","useMenuContext","strict","name","useMenu","props","id","closeOnSelect","closeOnBlur","autoSelect","isLazy","isOpen","isOpenProp","defaultIsOpen","onClose","onCloseProp","onOpen","onOpenProp","placement","lazyBehavior","direction","computePositionOnMount","popperProps","menuRef","useRef","buttonRef","descendants","focusMenu","useCallback","current","nextTick","selectTextIfInput","focusFirstItem","setTimeout","first","firstEnabled","setFocusedIndex","index","timeoutIds","add","focusLastItem","last","lastEnabled","onOpenInternal","onToggle","enabled","ref","handler","event","contains","target","popper","focusedIndex","useState","focusRef","visible","shouldFocus","buttonId","menuId","openAndFocusMenu","Set","forEach","clearTimeout","clear","openAndFocusFirstItem","openAndFocusLastItem","refocus","doc","hasFocusWithin","activeElement","shouldRefocus","node","item","preventScroll","onTransitionEnd","forceUpdate","orientation","useMenuButton","externalRef","menu","onKeyDown","eventKey","keyMap","Enter","ArrowDown","ArrowUp","action","preventDefault","stopPropagation","referenceRef","onClick","isTargetMenuItem","getAttribute","startsWith","useMenuList","Error","createTypeaheadHandler","key","Tab","Escape","next","nextEnabled","prev","prevEnabled","fn","onTypeahead","character","nextItem","values","textContent","indexOf","hasBeenOpened","shouldRenderChildren","hasBeenSelected","isSelected","children","tabIndex","role","style","transformOrigin","useMenuPositioner","getPopperProps","visibility","useMenuItem","onMouseEnter","onMouseEnterProp","onMouseMove","onMouseMoveProp","onMouseLeave","onMouseLeaveProp","onClickProp","isDisabled","isFocusable","htmlProps","menuCloseOnSelect","register","disabled","currentTarget","isFocused","trulyDisabled","clickableProps","useMenuOption","type","isChecked","rest","ownProps","useMenuOptionGroup","value","valueProp","defaultValue","onChange","onChangeProp","isRadio","fallback","setValue","selectedValue","nextValue","includes","validChildren","clones","map","child","cloneElement","useMenuState"],"mappings":"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","sourcesContent":["import { useClickable } from \"@chakra-ui/clickable\"\nimport { createDescendantContext } from \"@chakra-ui/descendant\"\nimport {\n  useControllableState,\n  useDisclosure,\n  UseDisclosureProps,\n  useFocusOnHide,\n  useId,\n  useIds,\n  useOutsideClick,\n  useShortcut,\n  useUnmountEffect,\n  useUpdateEffect,\n} from \"@chakra-ui/hooks\"\nimport { usePopper, UsePopperProps } from \"@chakra-ui/popper\"\nimport {\n  createContext,\n  EventKeyMap,\n  getValidChildren,\n  mergeRefs,\n} from \"@chakra-ui/react-utils\"\nimport {\n  addItem,\n  callAllHandlers,\n  dataAttr,\n  determineLazyBehavior,\n  focus,\n  getNextItemFromSearch,\n  getOwnerDocument,\n  isActiveElement,\n  isArray,\n  isHTMLElement,\n  isString,\n  LazyBehavior,\n  normalizeEventKey,\n  removeItem,\n} from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\n/* -------------------------------------------------------------------------------------------------\n * Create context to track descendants and their indices\n * -----------------------------------------------------------------------------------------------*/\n\nexport const [\n  MenuDescendantsProvider,\n  useMenuDescendantsContext,\n  useMenuDescendants,\n  useMenuDescendant,\n] = createDescendantContext<HTMLElement>()\n\n/* -------------------------------------------------------------------------------------------------\n * Create context to track menu state and logic\n * -----------------------------------------------------------------------------------------------*/\n\nexport const [MenuProvider, useMenuContext] = createContext<\n  Omit<UseMenuReturn, \"descendants\">\n>({\n  strict: false,\n  name: \"MenuContext\",\n})\n\n/* -------------------------------------------------------------------------------------------------\n * useMenu hook\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface UseMenuProps extends UsePopperProps, UseDisclosureProps {\n  /**\n   * If `true`, the menu will close when a menu item is\n   * clicked\n   *\n   * @default true\n   */\n  closeOnSelect?: boolean\n  /**\n   * If `true`, the menu will close when you click outside\n   * the menu list\n   *\n   * @default true\n   */\n  closeOnBlur?: boolean\n  /**\n   * If `true`, the first enabled menu item will receive focus and be selected\n   * when the menu opens.\n   *\n   * @default true\n   */\n  autoSelect?: boolean\n  /**\n   * Performance 🚀:\n   * If `true`, the MenuItem rendering will be deferred\n   * until the menu is open.\n   */\n  isLazy?: boolean\n  /**\n   * Performance 🚀:\n   * The lazy behavior of menu's content when not visible.\n   * Only works when `isLazy={true}`\n   *\n   * - \"unmount\": The menu's content is always unmounted when not open.\n   * - \"keepMounted\": The menu's content initially unmounted,\n   * but stays mounted when menu is open.\n   *\n   * @default \"unmount\"\n   */\n  lazyBehavior?: LazyBehavior\n  /**\n   * If `rtl`, poper placement positions will be flipped i.e. 'top-right' will\n   * become 'top-left' and vice-verse\n   */\n  direction?: \"ltr\" | \"rtl\"\n  /*\n   * If `true`, the menu will be positioned when it mounts\n   * (even if it's not open).\n   *\n   * Note 🚨: We don't recommend using this in a menu/popover intensive UI or page\n   * as it might affect scrolling performance.\n   */\n  computePositionOnMount?: boolean\n}\n\n/**\n * React Hook to manage a menu\n *\n * It provides the logic and will be used with react context\n * to propagate its return value to all children\n */\nexport function useMenu(props: UseMenuProps = {}) {\n  const {\n    id,\n    closeOnSelect = true,\n    closeOnBlur = true,\n    autoSelect = true,\n    isLazy,\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    onClose: onCloseProp,\n    onOpen: onOpenProp,\n    placement = \"bottom-start\",\n    lazyBehavior = \"unmount\",\n    direction,\n    computePositionOnMount = false,\n    ...popperProps\n  } = props\n  /**\n   * Prepare the reference to the menu and disclosure\n   */\n  const menuRef = React.useRef<HTMLDivElement>(null)\n  const buttonRef = React.useRef<HTMLButtonElement>(null)\n\n  /**\n   * Context to register all menu item nodes\n   */\n  const descendants = useMenuDescendants()\n\n  const focusMenu = React.useCallback(() => {\n    focus(menuRef.current, {\n      nextTick: true,\n      selectTextIfInput: false,\n    })\n  }, [])\n\n  const focusFirstItem = React.useCallback(() => {\n    const id = setTimeout(() => {\n      const first = descendants.firstEnabled()\n      if (first) setFocusedIndex(first.index)\n    })\n    timeoutIds.current.add(id)\n  }, [descendants])\n\n  const focusLastItem = React.useCallback(() => {\n    const id = setTimeout(() => {\n      const last = descendants.lastEnabled()\n      if (last) setFocusedIndex(last.index)\n    })\n    timeoutIds.current.add(id)\n  }, [descendants])\n\n  const onOpenInternal = React.useCallback(() => {\n    onOpenProp?.()\n    if (autoSelect) {\n      focusFirstItem()\n    } else {\n      focusMenu()\n    }\n  }, [autoSelect, focusFirstItem, focusMenu, onOpenProp])\n\n  const { isOpen, onOpen, onClose, onToggle } = useDisclosure({\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    onClose: onCloseProp,\n    onOpen: onOpenInternal,\n  })\n\n  useOutsideClick({\n    enabled: isOpen && closeOnBlur,\n    ref: menuRef,\n    handler: (event) => {\n      if (!buttonRef.current?.contains(event.target as HTMLElement)) {\n        onClose()\n      }\n    },\n  })\n\n  /**\n   * Add some popper.js for dynamic positioning\n   */\n  const popper = usePopper({\n    ...popperProps,\n    enabled: isOpen || computePositionOnMount,\n    placement,\n    direction,\n  })\n\n  const [focusedIndex, setFocusedIndex] = React.useState(-1)\n\n  /**\n   * Focus the button when we close the menu\n   */\n  useUpdateEffect(() => {\n    if (!isOpen) {\n      setFocusedIndex(-1)\n    }\n  }, [isOpen])\n\n  useFocusOnHide(menuRef, {\n    focusRef: buttonRef,\n    visible: isOpen,\n    shouldFocus: true,\n  })\n\n  /**\n   * Generate unique ids for menu's list and button\n   */\n  const [buttonId, menuId] = useIds(id, `menu-button`, `menu-list`)\n\n  const openAndFocusMenu = React.useCallback(() => {\n    onOpen()\n    focusMenu()\n  }, [onOpen, focusMenu])\n\n  const timeoutIds = React.useRef<Set<number>>(new Set([]))\n\n  useUnmountEffect(() => {\n    timeoutIds.current.forEach((id) => clearTimeout(id))\n    timeoutIds.current.clear()\n  })\n\n  const openAndFocusFirstItem = React.useCallback(() => {\n    onOpen()\n    focusFirstItem()\n  }, [focusFirstItem, onOpen])\n\n  const openAndFocusLastItem = React.useCallback(() => {\n    onOpen()\n    focusLastItem()\n  }, [onOpen, focusLastItem])\n\n  const refocus = React.useCallback(() => {\n    const doc = getOwnerDocument(menuRef.current)\n    const hasFocusWithin = menuRef.current?.contains(doc.activeElement)\n    const shouldRefocus = isOpen && !hasFocusWithin\n\n    if (!shouldRefocus) return\n\n    const node = descendants.item(focusedIndex)?.node\n    if (node) {\n      focus(node, { selectTextIfInput: false, preventScroll: false })\n    }\n  }, [isOpen, focusedIndex, descendants])\n\n  return {\n    openAndFocusMenu,\n    openAndFocusFirstItem,\n    openAndFocusLastItem,\n    onTransitionEnd: refocus,\n    descendants,\n    popper,\n    buttonId,\n    menuId,\n    forceUpdate: popper.forceUpdate,\n    orientation: \"vertical\",\n    isOpen,\n    onToggle,\n    onOpen,\n    onClose,\n    menuRef,\n    buttonRef,\n    focusedIndex,\n    closeOnSelect,\n    closeOnBlur,\n    autoSelect,\n    setFocusedIndex,\n    isLazy,\n    lazyBehavior,\n  }\n}\n\nexport interface UseMenuReturn extends ReturnType<typeof useMenu> {}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuButton hook\n * -----------------------------------------------------------------------------------------------*/\nexport interface UseMenuButtonProps\n  extends Omit<React.HTMLAttributes<Element>, \"color\"> {}\n\n/**\n * React Hook to manage a menu button.\n *\n * The assumption here is that the `useMenu` hook is used\n * in a component higher up the tree, and its return value\n * is passed as `context` to this hook.\n */\nexport function useMenuButton(\n  props: UseMenuButtonProps = {},\n  externalRef: React.Ref<any> = null,\n) {\n  const menu = useMenuContext()\n\n  const { onToggle, popper, openAndFocusFirstItem, openAndFocusLastItem } = menu\n\n  const onKeyDown = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      const eventKey = normalizeEventKey(event)\n      const keyMap: EventKeyMap = {\n        Enter: openAndFocusFirstItem,\n        ArrowDown: openAndFocusFirstItem,\n        ArrowUp: openAndFocusLastItem,\n      }\n\n      const action = keyMap[eventKey]\n\n      if (action) {\n        event.preventDefault()\n        event.stopPropagation()\n        action(event)\n      }\n    },\n    [openAndFocusFirstItem, openAndFocusLastItem],\n  )\n\n  return {\n    ...props,\n    ref: mergeRefs(menu.buttonRef, externalRef, popper.referenceRef),\n    id: menu.buttonId,\n    \"data-active\": dataAttr(menu.isOpen),\n    \"aria-expanded\": menu.isOpen,\n    \"aria-haspopup\": \"menu\" as React.AriaAttributes[\"aria-haspopup\"],\n    \"aria-controls\": menu.menuId,\n    onClick: callAllHandlers(props.onClick, onToggle),\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n  }\n}\n\nfunction isTargetMenuItem(target: EventTarget | null) {\n  // this will catch `menuitem`, `menuitemradio`, `menuitemcheckbox`\n  return (\n    isHTMLElement(target) &&\n    !!target.getAttribute(\"role\")?.startsWith(\"menuitem\")\n  )\n}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuList\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface UseMenuListProps\n  extends Omit<React.HTMLAttributes<Element>, \"color\"> {}\n\n/**\n * React Hook to manage a menu list.\n *\n * The assumption here is that the `useMenu` hook is used\n * in a component higher up the tree, and its return value\n * is passed as `context` to this hook.\n */\nexport function useMenuList(\n  props: UseMenuListProps = {},\n  ref: React.Ref<any> = null,\n) {\n  const menu = useMenuContext()\n\n  if (!menu) {\n    throw new Error(\n      `useMenuContext: context is undefined. Seems you forgot to wrap component within <Menu>`,\n    )\n  }\n\n  const {\n    focusedIndex,\n    setFocusedIndex,\n    menuRef,\n    isOpen,\n    onClose,\n    menuId,\n    isLazy,\n    lazyBehavior,\n  } = menu\n\n  const descendants = useMenuDescendantsContext()\n\n  /**\n   * Hook that creates a keydown event handler that listens\n   * to printable keyboard character press\n   */\n  const createTypeaheadHandler = useShortcut({\n    preventDefault: (event) =>\n      event.key !== \" \" && isTargetMenuItem(event.target),\n  })\n\n  const onKeyDown = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      const eventKey = normalizeEventKey(event)\n\n      const keyMap: EventKeyMap = {\n        Tab: (event) => event.preventDefault(),\n        Escape: onClose,\n        ArrowDown: () => {\n          const next = descendants.nextEnabled(focusedIndex)\n          if (next) setFocusedIndex(next.index)\n        },\n        ArrowUp: () => {\n          const prev = descendants.prevEnabled(focusedIndex)\n          if (prev) setFocusedIndex(prev.index)\n        },\n      }\n\n      const fn = keyMap[eventKey]\n\n      if (fn) {\n        event.preventDefault()\n        fn(event)\n        return\n      }\n\n      /**\n       * Typeahead: Based on current character pressed,\n       * find the next item to be selected\n       */\n      const onTypeahead = createTypeaheadHandler((character) => {\n        const nextItem = getNextItemFromSearch(\n          descendants.values(),\n          character,\n          (item) => item?.node?.textContent ?? \"\",\n          descendants.item(focusedIndex),\n        )\n        if (nextItem) {\n          const index = descendants.indexOf(nextItem.node)\n          setFocusedIndex(index)\n        }\n      })\n\n      if (isTargetMenuItem(event.target)) {\n        onTypeahead(event)\n      }\n    },\n    [\n      descendants,\n      focusedIndex,\n      createTypeaheadHandler,\n      onClose,\n      setFocusedIndex,\n    ],\n  )\n\n  const hasBeenOpened = React.useRef(false)\n  if (isOpen) {\n    hasBeenOpened.current = true\n  }\n\n  const shouldRenderChildren = determineLazyBehavior({\n    hasBeenSelected: hasBeenOpened.current,\n    isLazy,\n    lazyBehavior,\n    isSelected: isOpen,\n  })\n\n  return {\n    ...props,\n    ref: mergeRefs(menuRef, ref),\n    children: shouldRenderChildren ? props.children : null,\n    tabIndex: -1,\n    role: \"menu\",\n    id: menuId,\n    style: {\n      ...props.style,\n      transformOrigin: \"var(--popper-transform-origin)\",\n    },\n    \"aria-orientation\": \"vertical\" as React.AriaAttributes[\"aria-orientation\"],\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuPosition: Composes usePopper to position the menu\n * -----------------------------------------------------------------------------------------------*/\n\nexport function useMenuPositioner(props: any = {}) {\n  const { popper, isOpen } = useMenuContext()\n  return popper.getPopperProps({\n    ...props,\n    style: {\n      visibility: isOpen ? \"visible\" : \"hidden\",\n      ...props.style,\n    },\n  })\n}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuItem: Hook for each menu item within the menu list.\n   We also use it in `useMenuItemOption`\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface UseMenuItemProps\n  extends Omit<React.HTMLAttributes<Element>, \"color\"> {\n  /**\n   * If `true`, the menuitem will be disabled\n   */\n  isDisabled?: boolean\n  /**\n   * If `true` and the menuitem is disabled, it'll\n   * remain keyboard-focusable\n   */\n  isFocusable?: boolean\n  /**\n   * Overrides the parent menu's `closeOnSelect` prop.\n   */\n  closeOnSelect?: boolean\n}\n\nexport function useMenuItem(\n  props: UseMenuItemProps = {},\n  externalRef: React.Ref<any> = null,\n) {\n  const {\n    onMouseEnter: onMouseEnterProp,\n    onMouseMove: onMouseMoveProp,\n    onMouseLeave: onMouseLeaveProp,\n    onClick: onClickProp,\n    isDisabled,\n    isFocusable,\n    closeOnSelect,\n    ...htmlProps\n  } = props\n\n  const menu = useMenuContext()\n\n  const {\n    setFocusedIndex,\n    focusedIndex,\n    closeOnSelect: menuCloseOnSelect,\n    onClose,\n    menuRef,\n    isOpen,\n    menuId,\n  } = menu\n\n  const ref = React.useRef<HTMLDivElement>(null)\n  const id = `${menuId}-menuitem-${useId()}`\n\n  /**\n   * Register the menuitem's node into the domContext\n   */\n  const { index, register } = useMenuDescendant({\n    disabled: isDisabled && !isFocusable,\n  })\n\n  const onMouseEnter = React.useCallback(\n    (event) => {\n      onMouseEnterProp?.(event)\n      if (isDisabled) return\n      setFocusedIndex(index)\n    },\n    [setFocusedIndex, index, isDisabled, onMouseEnterProp],\n  )\n\n  const onMouseMove = React.useCallback(\n    (event) => {\n      onMouseMoveProp?.(event)\n      if (ref.current && !isActiveElement(ref.current)) {\n        onMouseEnter(event)\n      }\n    },\n    [onMouseEnter, onMouseMoveProp],\n  )\n\n  const onMouseLeave = React.useCallback(\n    (event) => {\n      onMouseLeaveProp?.(event)\n      if (isDisabled) return\n      setFocusedIndex(-1)\n    },\n    [setFocusedIndex, isDisabled, onMouseLeaveProp],\n  )\n\n  const onClick = React.useCallback(\n    (event: React.MouseEvent) => {\n      onClickProp?.(event)\n      if (!isTargetMenuItem(event.currentTarget)) return\n      /**\n       * Close menu and parent menus, allowing the MenuItem\n       * to override its parent menu's `closeOnSelect` prop.\n       */\n      if (closeOnSelect ?? menuCloseOnSelect) {\n        onClose()\n      }\n    },\n    [onClose, onClickProp, menuCloseOnSelect, closeOnSelect],\n  )\n\n  const isFocused = index === focusedIndex\n\n  const trulyDisabled = isDisabled && !isFocusable\n\n  useUpdateEffect(() => {\n    if (!isOpen) return\n    if (isFocused && !trulyDisabled && ref.current) {\n      focus(ref.current, {\n        nextTick: true,\n        selectTextIfInput: false,\n        preventScroll: false,\n      })\n    } else if (menuRef.current && !isActiveElement(menuRef.current)) {\n      focus(menuRef.current, { preventScroll: false })\n    }\n  }, [isFocused, trulyDisabled, menuRef, isOpen])\n\n  const clickableProps = useClickable({\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    ref: mergeRefs(register, ref, externalRef),\n    isDisabled,\n    isFocusable,\n  })\n\n  return {\n    ...htmlProps,\n    ...clickableProps,\n    id,\n    role: \"menuitem\",\n    tabIndex: isFocused ? 0 : -1,\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuOption: Composes useMenuItem to provide a selectable/checkable menu item\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface UseMenuOptionOptions {\n  value?: string\n  isChecked?: boolean\n  type?: \"radio\" | \"checkbox\"\n  children?: React.ReactNode\n}\n\nexport interface UseMenuOptionProps\n  extends UseMenuItemProps,\n    UseMenuOptionOptions {}\n\nexport function useMenuOption(\n  props: UseMenuOptionProps = {},\n  ref: React.Ref<any> = null,\n) {\n  const { type = \"radio\", isChecked, ...rest } = props\n  const ownProps = useMenuItem(rest, ref)\n  return {\n    ...ownProps,\n    role: `menuitem${type}`,\n    \"aria-checked\": isChecked as React.AriaAttributes[\"aria-checked\"],\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuOptionGroup: Manages the state of multiple selectable menuitem or menu option\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface UseMenuOptionGroupProps {\n  value?: string | string[]\n  defaultValue?: string | string[]\n  type?: \"radio\" | \"checkbox\"\n  onChange?: (value: string | string[]) => void\n  children?: React.ReactNode\n}\n\nexport function useMenuOptionGroup(props: UseMenuOptionGroupProps = {}) {\n  const {\n    children,\n    type = \"radio\",\n    value: valueProp,\n    defaultValue,\n    onChange: onChangeProp,\n    ...htmlProps\n  } = props\n\n  const isRadio = type === \"radio\"\n\n  const fallback = isRadio ? \"\" : []\n\n  const [value, setValue] = useControllableState({\n    defaultValue: defaultValue ?? fallback,\n    value: valueProp,\n    onChange: onChangeProp,\n  })\n\n  const onChange = React.useCallback(\n    (selectedValue: string) => {\n      if (type === \"radio\" && isString(value)) {\n        setValue(selectedValue)\n      }\n\n      if (type === \"checkbox\" && isArray(value)) {\n        const nextValue = value.includes(selectedValue)\n          ? removeItem(value, selectedValue)\n          : addItem(value, selectedValue)\n\n        setValue(nextValue)\n      }\n    },\n    [value, setValue, type],\n  )\n\n  const validChildren = getValidChildren(children)\n\n  const clones = validChildren.map((child) => {\n    /**\n     * We've added an internal `id` to each `MenuItemOption`,\n     * let's use that for type-checking.\n     *\n     * We can't rely on displayName or the element's type since\n     * they can be changed by the user.\n     */\n    if ((child.type as any).id !== \"MenuItemOption\") return child\n\n    const onClick = (event: MouseEvent) => {\n      onChange(child.props.value)\n      child.props.onClick?.(event)\n    }\n\n    const isChecked =\n      type === \"radio\"\n        ? child.props.value === value\n        : value.includes(child.props.value)\n\n    return React.cloneElement(child, {\n      type,\n      onClick,\n      isChecked,\n    })\n  })\n\n  return {\n    ...htmlProps,\n    children: clones,\n  }\n}\n\nexport function useMenuState() {\n  const { isOpen, onClose } = useMenuContext()\n  return { isOpen, onClose }\n}\n"],"file":"use-menu.js"}